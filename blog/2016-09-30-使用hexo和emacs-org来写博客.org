#+TITLE: 使用Hexo和emacs-Org来写博客
#+DATE: 2016-09-30
#+SETUPFILE: ~/Hexo/setupfile.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: emacs
#+JEKYLL_TAGS: emacs blog
#+JEKYLL_PUBLISHED: true


* 使用org-mode来写博客
最近闲着部署了一个静态博客，开启了自己的博客生涯，
采用的方案是目前最流行的 Github Pages + Hexo 。
使用 Hexo 博客框架可以方便快捷地完成部署，发布的功能，不过其只默认支持解析 markdown 格式的文章。
作为一个 emacs 用户，习惯于使用功能变态级强大的 org-mode 来写文档，自然也想要让自己的博客能够直接支持解析 org 格式文件。
对于这项任务，google了下发现已经有人做了 org-octopress 这个插件来支持 org-mode 写博客，
emacs 丰富的开源插件果然是很强大。

** 配置org-octopress
为了配置该功能，首先从Melpa软件仓库中安装org-octopress，并添加下面的代码设置你的文章发布功能。

#+BEGIN_SRC elisp
  (require 'org-octopress)
  (setq org-octopress-directory-top       "~/YourBlogDirectory")
  (setq org-octopress-directory-posts     "~/YourBlogDirectory/source/_posts") ;文章发布目录
  (setq org-octopress-directory-org-top   "~/YourBlogDirectory")
  (setq org-octopress-directory-org-posts "~/YourBlogDirectory/blog") ;org文章目录
  (setq org-octopress-setup-file          "~/YourBlogDirectory/setupfile.org")

#+END_SRC

其中的具体目录可以依据自己的实际情况进行修改，
在这里 top 指定的是博客的根目录；posts 为发布成 html 格式的文章所在的目录；
org-posts 为你使用 org 模式写的博客所在的目录；
org-top 为 org 博客的上一级别目录。

完成了之前的设定之后，你需要修改博客目录下的 _config.yml，以便适配 org-octopress 解析成的 html 博客文件：
#+BEGIN_EXAMPLE
permalink: /blog/:year-:month-:day-:title.html
#+END_EXAMPLE

接下来，你就可以使用 org-octopress 功能，此时会进入一个博客文章管理的 buffer，在这里面可以轻松地添加、修改或删除博客文章。

最后，当你写完博客以后，org-export-dispatch 中的 Publish 选项中来选择导出当前的博客文章或者整个 octopress 工程。
如果你想要预览你的文章的效果，你可以使用 prodigy 来快速查看，具体配置及使用可见 [[prodigy][下一章节]]。

** org博客中引用图片
为了避免在 org-mode 输出为 html 的过程中，图片引用路径产生问题，
需要在 emacs 的配置文件中加入下面的代码来在 org-mode 中注册一种新的图片引用格式。
#+BEGIN_SRC elisp
  (require 'ox-publish)
  (defun org-custom-link-img-follow (path)
    (org-open-file-with-emacs
     (format "../source/img/%s" path)))   ;the path of the image in local dic

  (defun org-custom-link-img-export (path desc format)
    (cond
     ((eq format 'html)
      (format "<img src=\"/img/%s\" alt=\"%s\"/>" path desc)))) ;the path of the image in webserver

  (org-add-link-type "img" 'org-custom-link-img-follow 'org-custom-link-img-export)
#+END_SRC
这两个路径所代表的图片存储位置分别是从 org 格式的文章所在的目录和 web 服务器的角度来看的。
如果使用该种配置方式，为了方便引用，建议将图片保存在 source 文件夹中。

* 在emacs中启动服务器和部署博客
<<prodigy>>
在 emacs 中启动外部服务的任务可以通过 Prodigy 这个插件提供的功能完成。
在 Melpa 中安装了该插件之后，添加下面的代码到你的配置文件后，就可以使用
 prodigy 在浏览器本地调试(hexo server默认指定4000端口)博客(Hexo Server）以及一键完成博客部署（Hexo Deploy）。

#+BEGIN_SRC elisp
(prodigy-define-service
 :name "Hexo Server"
 :command "hexo"
 :args '("server")
 :cwd "~/YourBlogDirectory"
 :tags '(hexo server)
 :kill-signal 'sigkill
 :kill-process-buffer-on-stop t)

(prodigy-define-service
 :name "Hexo Deploy"
 :command "hexo"
 :args '("deploy" "--generate")
 :cwd "~/YourBlogDirectory"
 :tags '(hexo deploy)
 :kill-signal 'sigkill
 :kill-process-buffer-on-stop t)
#+END_SRC

在 prodigy 模式下你可以通过s来启动所选服务，使用S来停止对应的服务，
该模式的详细的快捷键定义在 prodigy-mode-map 中，不过知道这两个就应该够用了。

* 参考
1.[[https://zilongshanren.com/blog/2015-07-19-add-org-mode-support.html][使用 Org-mode 来写博客]]

2.[[https://zilongshanren.com/blog/2015-08-02-migrate-blog-to-hexo.html][迁移博客到 Hexo]]

3.[[http://stackoverflow.com/questions/14684263/how-to-org-mode-image-absolute-path-of-export-html][how to org mode image absolute path of export html]]
